#drawflow {
  background: var(--dfBackgroundColor);
  background-size: var(--dfBackgroundSize) var(--dfBackgroundSize);
  background-image: var(--dfBackgroundImage);
}
:host ::ng-deep .drawflow .drawflow-node {  
  display: var(--dfNodeType);
  color: var(--dfNodeTextColor);
  border: var(--dfNodeBorderSize)  solid var(--dfNodeBorderColor);
  border-radius: var(--dfNodeBorderRadius);
  min-height: var(--dfNodeMinHeight);
  width: auto;
  min-width: var(--dfNodeMinWidth);
  padding-top: 0;
  padding-bottom: 0;
  -webkit-box-shadow: var(--dfNodeBoxShadowHL) var(--dfNodeBoxShadowVL) var(--dfNodeBoxShadowBR) var(--dfNodeBoxShadowS) var(--dfNodeBoxShadowColor);
  box-shadow:  var(--dfNodeBoxShadowHL) var(--dfNodeBoxShadowVL) var(--dfNodeBoxShadowBR) var(--dfNodeBoxShadowS) var(--dfNodeBoxShadowColor);

}
:host ::ng-deep .drawflow .drawflow-node:hover {
  background: var(--dfNodeHoverBackgroundColor);
  color: var(--dfNodeHoverTextColor);
  border: var(--dfNodeHoverBorderSize)  solid var(--dfNodeHoverBorderColor);
  border-radius: var(--dfNodeHoverBorderRadius);
  -webkit-box-shadow: var(--dfNodeHoverBoxShadowHL) var(--dfNodeHoverBoxShadowVL) var(--dfNodeHoverBoxShadowBR) var(--dfNodeHoverBoxShadowS) var(--dfNodeHoverBoxShadowColor);
  box-shadow:  var(--dfNodeHoverBoxShadowHL) var(--dfNodeHoverBoxShadowVL) var(--dfNodeHoverBoxShadowBR) var(--dfNodeHoverBoxShadowS) var(--dfNodeHoverBoxShadowColor);
}
:host ::ng-deep .drawflow .drawflow-node.selected { 
  background: var(--dfNodeSelectedBackgroundColor);
  color: var(--dfNodeSelectedTextColor);
  border: var(--dfNodeSelectedBorderSize)  solid var(--dfNodeSelectedBorderColor);
  border-radius: var(--dfNodeSelectedBorderRadius);
  -webkit-box-shadow: var(--dfNodeSelectedBoxShadowHL) var(--dfNodeSelectedBoxShadowVL) var(--dfNodeSelectedBoxShadowBR) var(--dfNodeSelectedBoxShadowS) var(--dfNodeSelectedBoxShadowColor);
  box-shadow:  var(--dfNodeSelectedBoxShadowHL) var(--dfNodeSelectedBoxShadowVL) var(--dfNodeSelectedBoxShadowBR) var(--dfNodeSelectedBoxShadowS) var(--dfNodeSelectedBoxShadowColor);

}

:host ::ng-deep .node {
  padding: 12px;
  text-align: center;
  font-weight: 500;
  border-radius: 6px;
  min-height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
}

:host ::ng-deep .drawflow .drawflow-node.testcase {
  background: linear-gradient(135deg, #2196f3, #1976d2);
  color: white;
}

:host ::ng-deep .drawflow .drawflow-node.step {
  background: linear-gradient(135deg, #ff9800, #f57c00);
  color: white;
}
:host ::ng-deep .drawflow-node .inputs,
:host ::ng-deep .drawflow-node .outputs {
  height: 15px;
  width: 15px;
  border-radius: 50%;
  float: var(--dfNodeTypeFloat);
}

:host ::ng-deep .drawflow-node .input {
  background: var(--dfInputBackgroundColor);
  border: var(--dfInputBorderSize)  solid var(--dfInputBorderColor);
  border-radius: var(--dfInputBorderRadius);
  height: var(--dfInputHeight);
  width: var(--dfInputWidth);

}
:host ::ng-deep .drawflow-node .input:hover {
  background: var(--dfInputHoverBackgroundColor);
  border: var(--dfInputHoverBorderSize)  solid var(--dfInputHoverBorderColor);
  border-radius: var(--dfInputHoverBorderRadius);
}

:host ::ng-deep .drawflow-node .output {
  right: var(--dfOutputRight);
  background: var(--dfOutputBackgroundColor);
  border: var(--dfOutputBorderSize)  solid var(--dfOutputBorderColor);
  border-radius: var(--dfOutputBorderRadius);
  height: var(--dfOutputHeight);
  width: var(--dfOutputWidth);
}
:host ::ng-deep .drawflow .drawflow-node .output:hover {
  background: var(--dfOutputHoverBackgroundColor);
  border: var(--dfOutputHoverBorderSize)  solid var(--dfOutputHoverBorderColor);
  border-radius: var(--dfOutputHoverBorderRadius);
}

:host ::ng-deep .drawflow .connection .main-path {
  stroke-width: var(--dfLineWidth);
  stroke: var(--dfLineColor);
}

:host ::ng-deep .drawflow .connection .main-path:hover {
  stroke: var(--dfLineHoverColor);
}

:host ::ng-deep .drawflow .connection .main-path.selected {
  stroke: var(--dfLineSelectedColor);
}

:host ::ng-deep .drawflow .connection .point {
  stroke: var(--dfRerouteBorderColor);
  stroke-width: var(--dfRerouteBorderWidth);
  fill: var(--dfRerouteBackgroundColor);
}

:host ::ng-deep .drawflow .connection .point:hover {
  stroke: var(--dfRerouteHoverBorderColor);
  stroke-width: var(--dfRerouteHoverBorderWidth);
  fill: var(--dfRerouteHoverBackgroundColor);
}

:host ::ng-deep .drawflow-delete {
  display: var(--dfDeleteDisplay);
  color: var(--dfDeleteColor);
  background: var(--dfDeleteBackgroundColor);
  border: var(--dfDeleteBorderSize) solid var(--dfDeleteBorderColor);
  border-radius: var(--dfDeleteBorderRadius);
}

:host ::ng-deep .parent-node .drawflow-delete {
  top: var(--dfDeleteTop);
}

:host ::ng-deep .drawflow-delete:hover {
  color: var(--dfDeleteHoverColor);
  background: var(--dfDeleteHoverBackgroundColor);
  border: var(--dfDeleteHoverBorderSize) solid var(--dfDeleteHoverBorderColor);
  border-radius: var(--dfDeleteHoverBorderRadius);
}
.workflow-designer {
  display: flex;
  flex-direction: row;
  height: 100vh;
  background-color: #f5f5f5;
}

.editor-container {
  flex: 1;
  position: relative;
  display: flex;
}

.drawflow-editor {
  height: 100%;
  width: 100%;
  flex: 1;
  background: linear-gradient(90deg, #f0f0f0 1px, transparent 1px),
  linear-gradient(#f0f0f0 1px, transparent 1px);
  background-size: 20px 20px;
}

.right-sidebar, .left-sidebar {
  width: 280px !important;
  display: flex;
  flex-direction: column;
  background-color: #ffffff;
  border-left: 1px solid #ccc;
  overflow-y: auto;
  padding: 10px;
}
.toolbar {
  margin-bottom: 20px;
}

.toolbar-buttons button,
.workflow-actions button {
  margin: 5px 0;
  width: 100%;
}

.properties-panel mat-card {
  margin-top: 10px;
}

.mat-form-field {
  width: 100%;
  margin-bottom: 16px;
}

.form-actions {
  display: flex;
  justify-content: space-between;
  margin-top: 15px;
}

.node {
  max-width: 200px;
  word-wrap: break-word;
  white-space: normal;
  border: 1px solid #ccc;
  background-color: #fff;
  border-radius: 6px;
  padding: 8px;
  box-shadow: 0 2px 6px rgba(0,0,0,0.1);
}

.node-title {
  font-weight: bold;
  font-size: 14px;
  margin-bottom: 4px;
}

.node-description {
  font-style: italic;
  font-size: 12px;
  color: #555;
  margin-bottom: 4px;
}

.node-setting {
  font-size: 12px;
  color: #333;
  margin-bottom: 2px;
}

.node {
  position: relative;
  cursor: pointer;
}

.node::after {
  content: attr(data-tooltip);
  white-space: pre-line;
  position: absolute;
  top: -5px;
  left: 105%;
  z-index: 1000;
  background-color: rgba(50, 50, 50, 0.95);
  color: #fff;
  padding: 8px 12px;
  font-size: 12px;
  line-height: 1.4;
  border-radius: 6px;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.2s ease;
  max-width: 250px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.3);
  pointer-events: none;
}

.node:hover::after {
  opacity: 1;
  visibility: visible;
}
:host ::ng-deep .drawflow .drawflow-node.end {
  background: linear-gradient(135deg, #f44336, #d32f2f);
  color: white;
  width: 50px !important;
}
:host ::ng-deep .drawflow .drawflow-node.start {
  background: linear-gradient(135deg, #4caf50, #45a049);
  color: white;
  width: 50px !important;
}
:host ::ng-deep .drawflow .drawflow-node.start .start-button,
:host ::ng-deep .drawflow .drawflow-node.end .end-button {
  background-color: #027005;
  border: none;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  color: white;
  font-size: 18px;
  cursor: pointer;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  transition: background-color 0.3s ease;
}
:host ::ng-deep .drawflow .drawflow-node.end .end-button {
  background-color: rgb(186, 41, 41);
}
:host ::ng-deep .drawflow .drawflow-node.start .start-button:hover {
  background-color: #45a049;
}
:host ::ng-deep .drawflow .drawflow-node.end .end-button:hover{
  background-color: rgb(133, 0, 0);
}
:host ::ng-deep .drawflow .drawflow-node.start .start-button .start-icon,
:host ::ng-deep .drawflow .drawflow-node.end .end-button .end-icon {
  font-family: 'Material Icons';
  font-size: 28px;
  margin-top: 5px;
  color: white;
}
:host ::ng-deep .drawflow .drawflow-node.end .end-button {
  margin-left: -28px;
}
:host ::ng-deep .drawflow .drawflow-node.start .start-button .rotating {
  animation: spin 1s linear infinite;
}
@keyframes spin {
  100% {
    transform: rotate(360deg);
  }
}
:host ::ng-deep .drawflow .drawflow-node .nested-actions {
  margin-top: 8px;
  text-align: center;
}
:host ::ng-deep .drawflow .drawflow-node .add-step-button {
  padding: 4px;
  font-size: 12px;
  border: none;
  background-color: #166402;
  border-radius: 4px;
  cursor: pointer;
  color: white;
  border-radius: 10%;
}
:host ::ng-deep .drawflow .drawflow-node .add-step-button:hover {
  background-color: #0023eb;
}

:host ::ng-deep .drawflow .drawflow-node .steps-container {
  margin-top: 10px;
  padding: 5px;
  border-top: 1px solid #ccc;
  font-size: 13px;
  max-height: 120px;
  overflow-y: auto;
}

:host ::ng-deep .drawflow .drawflow-node .step-inside {
  padding: 2px 4px;
  background-color: #f3f3f3;
  border-radius: 4px;
  margin-bottom: 3px;
}
:host ::ng-deep .drawflow-node.testcase .inputs {
  top: -10px;
  left: 50%;
  transform: translateX(-50%);
  position: absolute;
}
:host ::ng-deep .drawflow-node.testcase .outputs {
  bottom: -10px;
  left: 50%;
  transform: translateX(-50%);
  position: absolute;
}
:host ::ng-deep .drawflow-node.step .outputs {
  display: none !important;
}
:host ::ng-deep .drawflow-node .drawflow.step .output {
  display: none !important;
}
.drawflow-node-body {
  padding: 10px;
  border-radius: 8px;
  background-color: #f8f9fa;
  box-shadow: 0 0 5px rgba(0,0,0,0.1);
}

.node-title {
  font-size: 1rem;
}

.node-actions button {
  width: 30px;
  height: 30px;
  padding: 0;
}
.form-text{
  font-size: 10px !important;
}
.workflow-details-card {
  transition: all 0.3s ease;
}
.workflow-details-card:hover {
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}
.workflow-details-edit-mode {
  background-color: #f8f9fa;
  border: 1px solid #dee2e6;
}
.workflow-details-form .form-control {
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
}
.workflow-details-form .form-control:focus {
  border-color: #007bff;
  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
}
.workflow-details-buttons .btn {
  transition: all 0.2s ease;
}
.workflow-details-buttons .btn:hover {
  transform: translateY(-1px);
}
::ng-deep .success-snackbar {
  background-color: #28a745 !important;
  color: white !important;
}
::ng-deep .error-snackbar {
  background-color: #dc3545 !important;
  color: white !important;
}
.spinner-border-sm {
  width: 0.875rem;
  height: 0.875rem;
}
.edit-toggle-btn {
  transition: all 0.3s ease;
}
.edit-toggle-btn:hover {
  background-color: #007bff;
  color: white;
  transform: scale(1.05);
}
.is-invalid {
  border-color: #dc3545;
}
.invalid-feedback {
  display: block;
  font-size: 0.875rem;
  color: #dc3545;
  margin-top: 0.25rem;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .workflow-details-buttons {
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .workflow-details-buttons .btn {
    width: 100%;
  }
}